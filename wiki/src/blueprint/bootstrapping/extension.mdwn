[[!meta title="Automatic ISO verification extension for Firefox"]]

As part of our effort to simplify the workflow of a new user getting
started with Tails, we are working on a custom browser extension to
automate some verification of the ISO image after it has been
downloaded.

This has to be considered as part of a bigger plan to:

  - Further automate ISO verification. See the blueprint on [[ISO
    verification|verification]].
  - Guide the user through the whole process. See the blueprint on the
    [[web assistant|assistant]].

The extension will be used as well by people doing full upgrades until
we automate the download and verification steps of a full upgrade in
Tails Upgrader. See the blueprint on [[upgrades|upgrade]].

[[!toc]]

Goals
=====

  - Fix the ISO verification method using Windows which has been broken
    for years.
  - Simplify the installation process by automating *some* verification
    of the ISO image inside the browser as part of the download process.
  - Allow users who want to verify an ISO image downloaded previously or downloaded using BitTorrent to do the same
    level of verification as people downloading through their browser.
  - In case of a bad ISO image, help the user diagnose whether the
    download has been interrupted or the ISO has been corrupted.
  - In case of an interrupted download, help the user resume it. This
    requires us to have our mirrors stop sending HTTP ETag headers. See
    [[!tails_ticket 9022]].
  - Allow users to install the extension without restarting the browser.
  - Have the extension available in Firefox first, then Chrome. Firefox
    makes sense as a first target because it is the base for Tor Browser
    and is installed by default in Debian and Ubuntu. But Chrome is much
    more popular. Usage share of web browsers are currently on
    [Wikimedia](https://en.wikipedia.org/wiki/Usage_share_of_web_browsers):
    - Chrome: 48.1%
    - Internet Explorer: 17.5%
    - Firefox: 16.7%
    - Safari: 4.8%
    - Opera: 1.5%
    - Other: 11.4%

Non goals
=========

  - Verify deprecated ISO images.
  - Verify ISO images downloaded from nightly.tails.boum.org.

<a id="scenario"></a>

User scenario
=============

This scenario represents the UX side of things. It has to be refined
depending on the technical limitations of a browser extension, and the
broader wireframe of the web assistant. This should be clarified by the
beginning of April but not before. See [[!tails_ticket 8584]] and
[[!tails_ticket 8564]].

HTTP download
-------------

  - When the user clicks on the HTTP download button from the [[download
    page|download#index2h1]], we propose to install the extension.
  - The user allows the installation of the extension.
  - The extension starts the download and the user decides where to save
    the ISO.
  - The webpage is modified and displays a progress bar of the download.
  - The user might or might not close the webpage.
  - The download also appears in the usual list of downloads of the
    browser.

Torrent download
----------------

  - If a user has downloaded the ISO using BitTorrent, she can verify it
    as well as using the extension as part of the web assistant.

ISO verification
----------------

  - After the image has been downloaded, the web assistant leads the
    user through the ISO verification process.
  - The extension checks the size of the download to verify that the download
    was complete.
  - If the download was complete, the extension verifies the ISO image.
  - The extension displays the result to the user.
  - According to the result, the web assistant proposes to either:
      - if VERIFIED: continue with the installation.
      - if INCOMPLETE: explain calmly that the download has been
        interrupted and propose to resume the download.
      - if CORRUPTED: explain to the user that the download has been
	corrupted (to which extend?) and propose to download from another
	mirror (maybe https://archive.torproject.org/).

<a id="verification"></a>

ISO verification mechanism
==========================

We are considering here an attacker who can:

  - (A) Provide a malicious ISO image to the user for example by
    operating a rogue Tails mirror or BitTorrent file.

We are not considering an attacker who can:

  - (B) Do a man-in-the-middle attack by providing a rogue HTTPS certificate
    for https://tails.boum.org/ signed by a certificate authority
    trusted by the
    browser but under the control of the attacker.

    Since the extension is targeted at new users, a MitM or exploit on
    our website could defeat any verification technique by providing
    simplified instructions or by faking ISO verification.

    To mitigate such an attack we should work on deploying HPKP (HTTP
    Public Key Pinning) which provides TOFU on our SSL certificate
    ([[!tails_ticket 9026]]). But our certificate could also probably be
    integrated in the Firefox preload list shipped with the browser
    ([[!tails_ticket 9027]]).

  - (C) Insert malicious content on https://tails.boum.org/ through an
    exploit on our website as this could trick new users to skip the ISO
    verification all the way. To prevent this kind of attack we should
    instead:

    - Monitor externally the most relevant parts of our website.
    - Work on integrating full upgrades in Tails Upgrader. See
      [[!tails_ticket 7499]].

  - (D) Insert malicious information in our main Git repository as such
    an attacker could do attack (C) as well.

  - (E) Insert targeted malware on the user's computer as this could
    defeat any possible verification mechanism that such an extension
    could do.

  - (F) Provide a rogue extension to the user as this could defeat any
    possible verification mechanism that such an extension could do.

  - (G) Insert malicious content on https://tails.boum.org/ after taking
    control of the web server, or entire system, behind it. Such an
    attacker could do attack (C) as well but in such a way that could be
    much harder to detect (for example by serving malicious content to
    some users).

    To mitigate such an attack in some cases we could both:

    - Encourage external documentation (screencasts on YouTube, printed
      forms, etc.). But those would be vulnerable to other kind of
      attacks.
    - Not rely on the website to perform the ISO verification and rely
      on a native interface accessible from the add-ons menu.

Checksum verification
---------------------

The code of the extension includes:

  - The root certificate of the authority expected to sign the
    certificate of https://tails.boum.org/ (until we get [[!tails_ticket 9027]]).

When verifying an ISO image, the extension:

  - Connects to https://tails.boum.org/ and verifies its certificate
    against its expected authority.
  - If the certificate is trusted, then it downloads an ISO description
    document (size, checksum).
  - Verifies the ISO image against the document (first its size, then
    its checksum).

Security properties:

  - This technique would defeat attack A (malicious ISO).

Other considerations:

  - We would have to upgrade the extension if the certificate authority
    of https://tails.boum.org/ changes but we should know this in
    advance.
  - We need to decide if we want to integrate the verification process
    done by the extension directly in the website or give instructions
    to do it from the add-ons menu for exemple to mitigate attack G
    (server in control) [[!tails_ticket 8931]].
  - More complex verification mechanisms should be gradually [[built into
    Tails Installer|blueprint/bootstrapping/installer]] where we can
    defeat attacks B, C, D, F, and G.

Updates mechanism
=================

We should also keep in mind how would the extension upgrade (change in
the code, change in the certificates it relies upon). If we need to
upgrade the extension:

  - In Firefox, it has to go through a manual review process that can
    take several days.
  - In Chrome, it can be uploaded directly to the store by us.

Firefox checks for updates of the extension once per day on a secure
channel (the update pings are also used to generate add-ons usage
stats).

Open questions
--------------

- Does Tor Browser disables addons updates? See [[!tails_ticket 9028]].
