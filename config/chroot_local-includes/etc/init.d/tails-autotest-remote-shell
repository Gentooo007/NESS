#! /bin/sh
### BEGIN INIT INFO
# Provides:          tails-autotest-remote-shell
# Required-Start:    mountkernfs $local_fs
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      
# X-Start-Before:    $x-display-manager gdm gdm3
# Short-Description: Remote shell (over serial link) used in Tails test suite
# Description:       Remote shell (over serial link) used in Tails test suite
### END INIT INFO

# Author: Tails Developers <tails@boum.org>

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH="/usr/sbin:/usr/bin:/sbin:/bin"
DESC="Remote shell (over serial link) used in Tails test suite"
NAME="tails-autotest-remote-shell"
SCRIPTNAME="/etc/init.d/${NAME}"
DAEMON="/usr/local/lib/${NAME}"
DAEMON_ARGS="/dev/ttyS0"

# Exit if not run by Tails automated test suite. The if-construction
# below may seem silly but we really want to only continue running
# this script this if the expected kernel command-line option is
# present. Fail safe, not open, and all that.
if grep -qw "autotest_never_use_this_option" /proc/cmdline
then
	:
else
	exit 0
fi

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

wait_until_remote_shell_is_listening()
{
	REMOTE_SHELL_STATE_FILE=/var/lib/live/autotest-remote-shell-running
	until [ -e "${REMOTE_SHELL_STATE_FILE}" ]; do
		sleep 1
	done
}

do_start()
{
	start-stop-daemon \
		--start \
		--quiet \
		--background \
		--exec ${DAEMON} -- ${DAEMON_ARGS}
	wait_until_remote_shell_is_listening
}

case "${1}" in
  start)
	[ "${VERBOSE}" != no ] && log_daemon_msg "${DESC}" "${NAME}"
	do_start
        [ "${VERBOSE}" != no ] && log_end_msg ${?}
	;;
  restart|reload|stop|force-reload)
	:
	;;
  *)
	echo "Usage: ${SCRIPTNAME} start" >&2
	exit 1
	;;
esac

:
