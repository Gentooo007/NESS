#!/usr/bin/perl

use strict;
use warnings;

#man{{{

=head1 NAME

tails-virt-notify-user

=head1 VERSION

Version X.XX

=head1 AUTHOR

Tails dev team <amnesia@boum.org>
See https://tails.boum.org/.

=cut

#}}}

use Desktop::Notify;
use IPC::System::Simple qw{runx};
use Locale::gettext;
use Net::DBus::Reactor;
use POSIX;

### initialization
setlocale(LC_MESSAGES, "");
textdomain("tails");

### callbacks

sub action_cb {
    my $reactor = shift;
    system(
        '/usr/local/bin/tor-browser',
        'file:///usr/share/doc/tails/website/doc/advanced_topics/virtualization.en.html#security'
    );
    $reactor->shutdown;
}

### main

# both 0 and 1 are acceptable exit values:
#  - 0 means that we're running in a virtualized environment
#  - 1 means that we're not running in a virtualized environment
#  - anything else means there is a problem, and runx will throw an exception
my $exit_value = runx([0, 1], qw{/usr/bin/systemd-detect-virt});

exit 0 if $exit_value == 1;

my $reactor = Net::DBus::Reactor->main;

my $notify  = Desktop::Notify->new();
$notify->action_callback(sub { action_cb($reactor, @_) });
$notify->close_callback(sub { $reactor->shutdown; });

my $summary = gettext("Warning: virtual machine detected!");
my $body    =
    gettext("Both the host operating system and the virtualization software are able to monitor what you are doing in Tails.");

$notify->create(summary => $summary,
                body    => $body,
                actions => { 'moreinfo'  => gettext('Learn more'), },
                hints   => { 'transient' => 1, },
                timeout => 0)->show();

$reactor->run;
